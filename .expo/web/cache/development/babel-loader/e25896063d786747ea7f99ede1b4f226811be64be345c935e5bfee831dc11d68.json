{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { createClient, CallbackUrl } from \"@deepgram/sdk\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ImagePickerExample() {\n  var _useState = useState(null),\n    _useState2 = _slicedToArray(_useState, 2),\n    image = _useState2[0],\n    setImage = _useState2[1];\n  var pickImage = function () {\n    var _ref = _asyncToGenerator(function* () {\n      yield ImagePicker.requestCameraPermissionsAsync();\n      var result = yield ImagePicker.launchCameraAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        quality: 1\n      });\n      var file = result.assets[0].uri;\n      fetchData(file);\n      console.log(result.assets[0].uri);\n      if (!result.canceled) {\n        setImage(result.assets[0].uri);\n      }\n    });\n    return function pickImage() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    responseData = _useState4[0],\n    setResponseData = _useState4[1];\n  var fetchData = function () {\n    var _ref2 = _asyncToGenerator(function* (file) {\n      try {\n        var url = 'http://192.168.1.9:3000/send-image';\n        var fileName = file.split('/').pop();\n        var fileType = `image/${fileName.split('.').pop()}`;\n        var formData = new FormData();\n        formData.append('image', {\n          uri: file,\n          name: fileName,\n          type: fileType\n        });\n        var response = yield fetch(url, {\n          method: 'POST',\n          body: formData\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        var _responseData = yield response.json();\n        console.log(_responseData);\n        setResponseData(_responseData);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    });\n    return function fetchData(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Button, {\n      title: \"Pick an image from camera roll\",\n      onPress: pickImage\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"names":["useState","Button","Image","View","StyleSheet","ImagePicker","createClient","CallbackUrl","jsx","_jsx","ImagePickerExample","_useState","_useState2","_slicedToArray","image","setImage","pickImage","_ref","_asyncToGenerator","requestCameraPermissionsAsync","result","launchCameraAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","quality","file","assets","uri","fetchData","console","log","canceled","apply","arguments","_useState3","_useState4","responseData","setResponseData","_ref2","url","fileName","split","pop","fileType","formData","FormData","append","name","type","response","fetch","method","body","ok","Error","json","error","_x","style","styles","container","children","title","onPress","create","flex","alignItems","justifyContent"],"sources":["C:/Users/Liam Brent/OneDrive/Desktop/code/mobile/aiapp/AwesomeProject/imagepicker.js"],"sourcesContent":["\r\nimport { useState } from 'react';\r\nimport { Button, Image, View, StyleSheet } from 'react-native';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { createClient, CallbackUrl } from \"@deepgram/sdk\";\r\n\r\n\r\nexport default function ImagePickerExample() {\r\n  const [image, setImage] = useState(null);\r\n  \r\n  const pickImage = async () => {\r\n    await ImagePicker.requestCameraPermissionsAsync();\r\n    let result = await ImagePicker.launchCameraAsync({\r\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n      allowsEditing: true,\r\n      \r\n      quality: 1,\r\n    });\r\n    const file = result.assets[0].uri\r\n    \r\n    fetchData(file)\r\n    console.log(result.assets[0].uri)\r\n    if (!result.canceled) {\r\n      setImage(result.assets[0].uri);\r\n    }\r\n  };\r\n\r\n\r\n  \r\n\r\n\r\n\r\n  const [responseData, setResponseData] = useState(null);\r\n\r\n  const fetchData = async (file) => {\r\n    try {\r\n      const url = 'http://192.168.1.9:3000/send-image';\r\n\r\n      const fileName = file.split('/').pop();\r\n\r\n      // Determine file type based on file extension\r\n      const fileType = `image/${fileName.split('.').pop()}`;\r\n\r\n      const formData = new FormData();\r\n\r\n      // Append the file to the FormData object\r\n      formData.append('image', {\r\n        uri: file,\r\n        name: fileName,\r\n        type: fileType,\r\n      });\r\n\r\n      const response = await fetch(url, {\r\n        method: 'POST',\r\n        body: formData,\r\n        \r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n\r\n      const responseData = await response.json();\r\n      console.log(responseData);\r\n      setResponseData(responseData)\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    }\r\n\r\n  };\r\n\r\n\r\n\r\n  \r\n  return (\r\n    <View style={styles.container}>\r\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\r\n    </View>\r\n  );\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  \r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}