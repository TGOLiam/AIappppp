{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport { Audio } from 'expo-av';\nvar OCRData;\nvar gatcha = 'hello';\nvar topic = \"The image is about what? ONLY ONE SENTENCE. End with How can i help you?\";\nvar tune = \"Your name is Liam\";\nvar model = \"27\";\nvar duration;\nvar soundObject = new Audio.Sound();\nexport { topic, soundObject, duration };\nexport var processImage = function () {\n  var _ref = _asyncToGenerator(function* () {\n    yield ImagePicker.requestCameraPermissionsAsync();\n    var result = yield ImagePicker.launchCameraAsync({\n      mediaTypes: ImagePicker.MediaTypeOptions.All,\n      allowsEditing: true,\n      base64: true,\n      quality: 0.5\n    });\n    var file = result.assets[0].base64;\n    console.log(result.assets[0].uri);\n    if (!result.canceled) {\n      console.log(\"image processing\");\n    }\n    return file;\n  });\n  return function processImage() {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport function OcrApiRequest(_x) {\n  return _OcrApiRequest.apply(this, arguments);\n}\nfunction _OcrApiRequest() {\n  _OcrApiRequest = _asyncToGenerator(function* (file) {\n    try {\n      var completeBase64 = `data:image/jpg;base64,${file}`;\n      var apiKey = 'K89035530388957';\n      var endpoint = 'https://api.ocr.space/parse/image';\n      var formData = new FormData();\n      formData.append('base64Image', completeBase64);\n      formData.append('apikey', apiKey);\n      var response = yield fetch(endpoint, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      var data = yield response.json();\n      if (response.ok) {\n        OCRData = data.ParsedResults[0].ParsedText;\n      }\n      console.log(OCRData);\n      return OCRData;\n    } catch (error) {\n      console.error('Error occurred during OCR API request:', error);\n    }\n  });\n  return _OcrApiRequest.apply(this, arguments);\n}\nexport var AIapiRequest = function () {\n  var _ref2 = _asyncToGenerator(function* (data, question) {\n    if (data === undefined) {\n      data = '';\n    }\n    console.log(\"Processing AI\");\n    var url = `https://models3.p.rapidapi.com/?model_id=${model}&prompt=Write%20prompt%20in%20body%20not%20here!`;\n    var options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'X-RapidAPI-Key': 'e3dd378c36mshfa7bf0801eb3953p1b55a4jsn5fa4ac659c4f',\n        'X-RapidAPI-Host': 'models3.p.rapidapi.com'\n      },\n      body: JSON.stringify({\n        messages: [{\n          role: 'assistant',\n          content: `${tune} CONTEXT: ${data}`\n        }, {\n          role: 'user',\n          content: question\n        }]\n      })\n    };\n    try {\n      var response = yield fetch(url, options);\n      var result = yield response.json();\n      var AItext = result.content;\n      console.log(AItext);\n      return AItext;\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function AIapiRequest(_x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var speakAI = function () {\n  var _ref3 = _asyncToGenerator(function* (text) {\n    console.log(\"Proccessing speech to text\");\n    var replacedText = text.replace(/\\s+/g, ' ');\n    var url = 'https://natural-text-to-speech-converter-at-lowest-price.p.rapidapi.com/backend/ttsNewDemo';\n    var options = {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'X-RapidAPI-Key': 'e3dd378c36mshfa7bf0801eb3953p1b55a4jsn5fa4ac659c4f',\n        'X-RapidAPI-Host': 'natural-text-to-speech-converter-at-lowest-price.p.rapidapi.com'\n      },\n      body: JSON.stringify({\n        ttsService: 'polly',\n        audioKey: 'ff63037e-6994-4c50-9861-3e162ee56468',\n        storageService: 's3',\n        text: `<speak><p>${replacedText}</p></speak>`,\n        voice: {\n          value: 'en-GB_Emma',\n          lang: 'en-US'\n        },\n        audioOutput: {\n          fileFormat: 'mp3',\n          sampleRate: 24000\n        }\n      })\n    };\n    try {\n      var response = yield fetch(url, options);\n      var result = yield response.json();\n      if (response.ok) {\n        console.log(\"Audio Done: \", result.url);\n      }\n      return result.url;\n    } catch (error) {\n      console.log(error);\n    }\n  });\n  return function speakAI(_x4) {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var PlayAudio = function () {\n  var _ref4 = _asyncToGenerator(function* (input, audio) {\n    console.log(audio);\n    try {\n      var _yield$Audio$Sound$cr = yield Audio.Sound.createAsync({\n          uri: audio\n        }),\n        sound = _yield$Audio$Sound$cr.sound;\n      yield sound.playAsync();\n      if (input === \"pause\") {\n        yield sound.pauseAsync();\n      }\n    } catch (error) {\n      console.log('Error playing audio:', error);\n    }\n  });\n  return function PlayAudio(_x5, _x6) {\n    return _ref4.apply(this, arguments);\n  };\n}();","map":{"version":3,"names":["ImagePicker","Audio","OCRData","gatcha","topic","tune","model","duration","soundObject","Sound","processImage","_ref","_asyncToGenerator","requestCameraPermissionsAsync","result","launchCameraAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","base64","quality","file","assets","console","log","uri","canceled","apply","arguments","OcrApiRequest","_x","_OcrApiRequest","completeBase64","apiKey","endpoint","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","ParsedResults","ParsedText","error","AIapiRequest","_ref2","question","undefined","url","options","headers","JSON","stringify","messages","role","content","AItext","_x2","_x3","speakAI","_ref3","text","replacedText","replace","ttsService","audioKey","storageService","voice","value","lang","audioOutput","fileFormat","sampleRate","_x4","PlayAudio","_ref4","input","audio","_yield$Audio$Sound$cr","createAsync","sound","playAsync","pauseAsync","_x5","_x6"],"sources":["C:/Users/Liam/Desktop/code2/Gatcha/APIprocess.js"],"sourcesContent":["\r\n\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport { Audio } from 'expo-av';\r\n\r\nlet OCRData\r\nlet gatcha = 'hello'\r\nlet topic = \"The image is about what? ONLY ONE SENTENCE. End with How can i help you?\"\r\n\r\nlet tune = \"Your name is Liam\"\r\nlet model = \"27\"\r\nlet duration\r\nlet soundObject = new Audio.Sound();\r\n\r\nexport { topic, soundObject, duration }\r\n\r\nexport const processImage = async () => {\r\n  await ImagePicker.requestCameraPermissionsAsync();\r\n  let result = await ImagePicker.launchCameraAsync({\r\n    mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n    allowsEditing: true,\r\n    base64: true,\r\n    quality: 0.5,\r\n  });\r\n  const file = result.assets[0].base64\r\n  console.log(result.assets[0].uri)\r\n  if (!result.canceled) {\r\n    console.log(\"image processing\")\r\n  }\r\n  return file\r\n}\r\n\r\n\r\n\r\nexport async function OcrApiRequest(file) {\r\n  try {\r\n    const completeBase64 = `data:image/jpg;base64,${file}`;\r\n    const apiKey = 'K89035530388957';\r\n    const endpoint = 'https://api.ocr.space/parse/image';\r\n\r\n    const formData = new FormData();\r\n    formData.append('base64Image', completeBase64);\r\n    formData.append('apikey', apiKey);\r\n\r\n    const response = await fetch(endpoint, {\r\n      method: 'POST',\r\n      body: formData\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error('Network response was not ok');\r\n    }\r\n\r\n    const data = await response.json();\r\n    if (response.ok) {\r\n      OCRData = data.ParsedResults[0].ParsedText\r\n    }\r\n    console.log(OCRData)\r\n    return OCRData\r\n  } catch (error) {\r\n    console.error('Error occurred during OCR API request:', error);\r\n    // Handle the error appropriately\r\n  }\r\n}\r\n\r\n\r\nexport const AIapiRequest = async (data, question) => {\r\n  if (data === undefined) {\r\n    data = ''\r\n  }\r\n\r\n  console.log(\"Processing AI\")\r\n  const url = `https://models3.p.rapidapi.com/?model_id=${model}&prompt=Write%20prompt%20in%20body%20not%20here!`;\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-RapidAPI-Key': 'e3dd378c36mshfa7bf0801eb3953p1b55a4jsn5fa4ac659c4f',\r\n      'X-RapidAPI-Host': 'models3.p.rapidapi.com'\r\n    },\r\n    body: JSON.stringify({\r\n      messages: [\r\n        {\r\n          role: 'assistant',\r\n          content: `${tune} CONTEXT: ${data}`\r\n        },\r\n        {\r\n          role: 'user',\r\n          content: question\r\n        }\r\n      ]\r\n    }),\r\n\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const result = await response.json();\r\n    const AItext = result.content\r\n    console.log(AItext);\r\n    return AItext\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const speakAI = async (text) => {\r\n\r\n  console.log(\"Proccessing speech to text\")\r\n  const replacedText = text.replace(/\\s+/g, ' ');\r\n\r\n  const url = 'https://natural-text-to-speech-converter-at-lowest-price.p.rapidapi.com/backend/ttsNewDemo';\r\n  const options = {\r\n    method: 'POST',\r\n    headers: {\r\n      'content-type': 'application/json',\r\n      'X-RapidAPI-Key': 'e3dd378c36mshfa7bf0801eb3953p1b55a4jsn5fa4ac659c4f',\r\n      'X-RapidAPI-Host': 'natural-text-to-speech-converter-at-lowest-price.p.rapidapi.com'\r\n    },\r\n    body: JSON.stringify({\r\n      ttsService: 'polly',\r\n      audioKey: 'ff63037e-6994-4c50-9861-3e162ee56468',\r\n      storageService: 's3',\r\n      text: `<speak><p>${replacedText}</p></speak>`,\r\n      voice: {\r\n        value: 'en-GB_Emma',\r\n        lang: 'en-US'\r\n      },\r\n      audioOutput: {\r\n        fileFormat: 'mp3',\r\n        sampleRate: 24000\r\n      }\r\n    }),\r\n\r\n  };\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const result = await response.json();\r\n    if (response.ok) {\r\n      console.log(\"Audio Done: \", result.url);\r\n    }\r\n    return result.url\r\n  } catch (error) {\r\n    console.log(error);\r\n\r\n  }\r\n}\r\n\r\nexport const PlayAudio = async (input, audio) => {\r\n  console.log(audio);\r\n  try {\r\n    const { sound } = await Audio.Sound.createAsync({ uri: audio });\r\n\r\n    await sound.playAsync(); // Wait for playback to start\r\n\r\n    if (input === \"pause\") {\r\n      await sound.pauseAsync(); // Wait for pausing to complete\r\n    }\r\n  } catch (error) {\r\n    console.log('Error playing audio:', error);\r\n  }\r\n};\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}